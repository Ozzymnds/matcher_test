version: '3'
services:
  matcher-backend:
    container_name: matcher-backend
    build:
      context: .
      dockerfile: ./dockerfiles/Dockerfile_Django_${ENVIRONMENT}
    env_file:
      - ./.env
    environment: 
      - ENVIRONMENT=${ENVIRONMENT}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD_DJANGO}
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY}
    ports:
      - "8000:8000"
    volumes:
      - ./{{matcher}}_backend:/code/{{matcher}}_backend
    healthcheck:
      test: curl --fail http://localhost:8000/funciones/api/v1/healthcheck || exit 1
      interval: 60s
      timeout: 10s
      start_period: 10s
      retries: 3

  client-frontend:
    container_name: client-frontend
    build:
      context: .
      dockerfile: ./dockerfiles/Dockerfile_React_${ENVIRONMENT}
    environment:
      - ENVIRONMENT=${ENVIRONMENT}
    ports:
      - "5173:5173"
    volumes:
      - ./{{client}}_frontend/:/{{client}}_frontend/

  funciones-db:
    container_name: matcher-db
    image: "postgres: 14.7"
    volumes: 
      - ./postgres_data:/var/lib/postgres/data/
    environment:
      - POSTGRES_USER=django
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD_DJANGO}
      - POSTGRES_DB=django
    expose:
      - "5432"
    ports:
      - "5432:5432"

  # matcher-nginx:
  #   image: nginx:latest
  #   container_name: matcher-nginx
  #   restart: unless-stopped
  #   ports:
  #     - ${PORT}:${PORT}
  #   volumes:
  #     - ./nginx/nginx_${ENVIRONMENT}.conf:/etc/nginx/nginx.conf
  #     - ./all_services_ca/:/etc/nginx/ssl/:ro
  #     - ./{{ app_name_with_underscores }}_frontend/build/:/srv/{{ app_name_with_underscores }}_frontend/build/
  #   depends_on:
  #     - matcher-backend
  
volumes:
  postgres_data: {}
  matcher_backend: {}